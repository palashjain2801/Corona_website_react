{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","images/covid-19-2.png"],"names":["module","exports","Cards","data","confirmed","deaths","lastUpdate","recovered","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","varaint","start","end","value","duration","separator","Date","toDateString","variant","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","fetchDailyDate","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","dailyDate","setDailyData","useEffect","fetchAPI","lineChart","labels","datasets","label","borderColor","fill","barchart","backgroundColor","options","legends","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountrues","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","keys","values","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c353a85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2ksI3\",\"card\":\"Cards_card__2-AEK\",\"infected\":\"Cards_infected__z-9m4\",\"recovered\":\"Cards_recovered__3st2j\",\"deaths\":\"Cards_deaths__2tJE-\"};","import React from 'react'\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport styles from './Cards.module.css'\r\nimport CountUp from \"react-countup\"\r\nimport cx from 'classnames'\r\n\r\nconst Cards =({data: {confirmed,deaths,lastUpdate,recovered}}) =>{\r\n    if(!confirmed){\r\n        return \"loading...\";\r\n    }\r\n    console.log(\"Cards -> confiremed,deaths,lastUpdate,recovered\", confirmed,deaths,lastUpdate,recovered)\r\n    return(\r\n         <div className = {styles.container}>\r\n             <Grid container spacing={3} justify=\"center\">\r\n             <Grid item component={Card} xs={12} md={3} className={cx(styles.card , styles.infected)}>\r\n                 <CardContent>\r\n                     <Typography color=\"textSecoundary\" gutterBottom>Infected</Typography>\r\n                     <Typography  varaint=\"h5\">\r\n                        <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n\r\n                     </Typography>\r\n                     <Typography color = \"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\r\n                     <Typography variant=\"body2\">Number of active cases of COVID-!9</Typography>\r\n                 </CardContent>\r\n             </Grid>\r\n\r\n             <Grid item component={Card} xs={12} md={3} className={cx(styles.card , styles.recovered)}>                 <CardContent>\r\n                     <Typography color=\"textSecoundary\" gutterBottom>Recovered</Typography>\r\n                     <Typography  varaint=\"h5\">\r\n                        <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n\r\n                     </Typography>\r\n                     <Typography color = \"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\r\n                     <Typography variant=\"body2\">Number of active cases of COVID-!9</Typography>\r\n                 </CardContent>\r\n             </Grid>\r\n\r\n\r\n             <Grid item component={Card} xs={12} md={3} className={cx(styles.card , styles.deaths)}>\r\n                 <CardContent>\r\n                     <Typography color=\"textSecoundary\" gutterBottom>Deaths</Typography>\r\n                     <Typography  varaint=\"h5\">\r\n                        <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n\r\n                     </Typography>\r\n                     <Typography color = \"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\r\n                     <Typography variant=\"body2\">Number of active cases of COVID-!9</Typography>\r\n                 </CardContent>\r\n             </Grid>\r\n\r\n\r\n\r\n             </Grid>\r\n                \r\n\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios'\r\n\r\nconst url ='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async(country) => {\r\n    let changeableUrl = url\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n    try {\r\n        const {data} = await axios.get(changeableUrl);\r\n        const modifiedData = {\r\n            confirmed: data.confirmed,\r\n            recovered: data.recovered,\r\n            deaths: data.deaths,\r\n            lastUpdate:data.lastUpdate\r\n        }\r\n        return modifiedData\r\n\r\n    } catch (error) {\r\n    console.log(\"fetchData -> error\", error)\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchDailyDate = async() =>\r\n{\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n        return (modifiedData);\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {data : {countries}} = await axios.get(`${url}/countries`);\r\n        \r\n        return countries.map((country) => country.name)\r\n        \r\n    } catch (error) {\r\n        \r\n    }\r\n}","import React, {useState,useEffect} from 'react'\r\nimport {fetchDailyDate } from '../../api'\r\nimport {Line , Bar} from 'react-chartjs-2'\r\nimport styles from './Charts.module.css'\r\nconst Charts =({data , country}) =>{\r\n    console.log(\"Charts -> data\", data)\r\n    const [dailyDate, setDailyData] = useState([])\r\n    useEffect(()=>{\r\n        const fetchAPI = async() =>{\r\n            setDailyData(await fetchDailyDate());\r\n        }\r\n       // console.log(\"Charts -> dailyData\", dailyData)\r\n\r\n        fetchAPI();\r\n    },[]);\r\n    const lineChart = (    \r\n        dailyDate[0] ?(  <Line\r\n            data = {{\r\n                labels:dailyDate.map(({date}) => date),\r\n                datasets:[{\r\n                    data: dailyDate.map(({confirmed})=> confirmed),\r\n                    label:'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true\r\n                },{\r\n                    data: dailyDate.map(({deaths})=> deaths),\r\n                    label:'Deaths',\r\n                    borderColor: 'rgba(255 ,0,0,0.5)',\r\n                    fill: true\r\n                }]\r\n            }} />) : null\r\n    );\r\n    const barchart = (\r\n        data.confirmed?(\r\n            <Bar\r\n            data = {{\r\n                labels:['Infected','Recovered','Deaths'],\r\n                datasets:[{\r\n                    label: 'People',\r\n                    backgroundColor:[\r\n                        'rgba(0,0,255,0.5)',\r\n                        'rgba(0,255,0,0.5)',\r\n                        'rgba(255 ,0,0,0.5)',\r\n                    ],\r\n                    data:[data.confirmed.value,data.recovered.value,data.deaths.value]\r\n                }]\r\n\r\n            }}\r\n            options={{\r\n                legends: {display:false},\r\n                title: {title: true, text:`current state in ${country}`},\r\n            }}\r\n            />\r\n\r\n\r\n        ):null\r\n    )\r\n    return(\r\n        <div className = {styles.container}>\r\n        {country?barchart:lineChart}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Charts;","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\" \r\nimport {fetchCountries} from '../../api'\r\n\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [fetchedCountries , setFetchedCountrues] = useState([]);\r\n        useEffect(()=>{\r\n            const fetchAPI = async () =>{\r\n                setFetchedCountrues(await fetchCountries())\r\n\r\n            }\r\n            fetchAPI();\r\n        },[setFetchedCountrues]);\r\n\r\n\r\n    console.log(\"CountryPicker -> fetchedCountries\",fetchedCountries)\r\n    return (    \r\n    <FormControl className={styles.formControl}>\r\n    <NativeSelect defaultValue =\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\"> Global </option>\r\n        {fetchedCountries.map((country,i)=><option keys={i} values={country}>{country}</option>)}\r\n    </NativeSelect>\r\n    </FormControl>\r\n    );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from 'react';\n\n\nimport {Cards, Charts, CountryPicker} from './components';\nimport styles from './App.module.css';\nimport {fetchData} from './api';\nimport coronaImage from './images/covid-19-2.png';\n\nclass App extends React.Component{\n  state = {\n    data: {},\n    country:'',\n  }\n  async componentDidMount (){\n    const fetchedData = await fetchData();\n    this.setState({data : fetchedData});\n  }\n\nhandleCountryChange = async(country) => {\n  const fetchedData = await fetchData(country)\n  console.log(\"App -> handleCountryChange -> fetchedData\", fetchedData)\n  this.setState({data: fetchedData, country:country});\n  \n}\n\n\n\n  render(){\n    const {data,country} = this.state;\n    return(\n      <div className={styles.container}>\n        <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\n          <Cards data={data}/>\n          <CountryPicker handleCountryChange={this.handleCountryChange}/>\n          <Charts data={data} country={country}/>\n\n\n      </div>\n    )\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />,\n    </HashRouter>\n  , document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1QKiQ\",\"image\":\"App_image__pr2o0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1CkbF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__bMhj4\"};","module.exports = __webpack_public_path__ + \"static/media/covid-19-2.deb02317.png\";"],"sourceRoot":""}